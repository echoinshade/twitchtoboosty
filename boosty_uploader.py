import os
import time
import re
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.edge.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from datetime import datetime
from dotenv import load_dotenv 

VIDEO_DIR = "downloads"  # –ü–∞–ø–∫–∞ —Å –≤–∏–¥–µ–æ
BOOSTY_USERNAME = os.getenv("BOOSTY_USERNAME")

def get_latest_video():
    """–ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª"""
    files = [f for f in os.listdir(VIDEO_DIR) if f.endswith(".mp4")]
    if not files:
        print("‚ùå –ù–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏!")
        return None
    latest_file = max(files, key=lambda f: os.path.getctime(os.path.join(VIDEO_DIR, f)))
    return os.path.join(VIDEO_DIR, latest_file)

def generate_teaser(filename):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Ç–∏–∑–µ—Ä–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞"""
    name_without_extension = filename.replace(".mp4", "")
    teaser_text = name_without_extension.replace("_", " ")
    teaser_text = re.sub(r'\b(–º–µ—Ä—á|—Ç–≥)\b', '', teaser_text)
    teaser_text = ' '.join(teaser_text.split())  # –£–±–∏—Ä–∞–µ–º –¥–≤–æ–π–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    return teaser_text

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –æ—Ç–∫—Ä—ã—Ç–æ–º—É –±—Ä–∞—É–∑–µ—Ä—É Edge
edge_options = Options()
edge_options.debugger_address = "localhost:9222"

driver = webdriver.Edge(options=edge_options)
wait = WebDriverWait(driver, 15)

try:
    # 1Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞
    driver.get("https://boosty.to/{BOOSTY_USERNAME}/new-post")

    # 2Ô∏è‚É£ –ñ–¥–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ —Ç–µ–≥–∏
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—è –¥–ª—è —Ç–µ–≥–æ–≤...")
    tags_field = wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='–í–≤–æ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ Enter (–Ω–µ –±–æ–ª–µ–µ 10)']")))

    # –í–≤–æ–¥–∏–º "—Å—Ç—Ä–∏–º" –∏ –Ω–∞–∂–∏–º–∞–µ–º Enter
    print("üìù –í–≤–æ–¥–∏–º —Ç–µ–≥ '—Å—Ç—Ä–∏–º'...")
    tags_field.send_keys("—Å—Ç—Ä–∏–º")
    tags_field.send_keys(Keys.RETURN)

    # –í–≤–æ–¥–∏–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥
    current_date = datetime.now().strftime("%d.%m.%Y")
    print(f"üìù –í–≤–æ–¥–∏–º –¥–∞—Ç—É {current_date}...")
    tags_field.send_keys(current_date)
    tags_field.send_keys(Keys.RETURN)

    # 3Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ
    video_path = get_latest_video()
    if not video_path:
        driver.quit()
        exit()

    video_name = os.path.basename(video_path)
    teaser_text = generate_teaser(video_name)
    print(f"üìå –ó–∞–≥–æ–ª–æ–≤–æ–∫/—Ç–∏–∑–µ—Ä: {teaser_text}")

    # 4Ô∏è‚É£ –ñ–¥–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞...")
    title_field = wait.until(EC.presence_of_element_located((By.XPATH, "//input[@placeholder='–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞']")))

    print("üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫...")
    title_field.send_keys(teaser_text)

    # 5Ô∏è‚É£ –ñ–¥–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ç–∏–∑–µ—Ä –ø–æ—Å—Ç–∞
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—è —Ç–∏–∑–µ—Ä–∞...")
    teaser_field = wait.until(EC.presence_of_element_located((By.XPATH, "//div[@data-placeholder='–ù–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å —Ç–∏–∑–µ—Ä']")))

    print("üìù –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∏–∑–µ—Ä...")
    driver.execute_script("arguments[0].innerText = arguments[1];", teaser_field, teaser_text)
    time.sleep(2)  # –î–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

    # 6Ô∏è‚É£ –ñ–¥–µ–º –∫–Ω–æ–ø–∫—É "–í–∏–¥–µ–æ" –∏ –Ω–∞–∂–∏–º–∞–µ–º
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–í–∏–¥–µ–æ'...")
    video_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[.//span[contains(text(), '–í–∏–¥–µ–æ')]]")))

    print("‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞! –ù–∞–∂–∏–º–∞–µ–º...")
    video_button.click()
    time.sleep(2)  # –ñ–¥–µ–º, —á—Ç–æ–±—ã –º–µ–Ω—é –æ—Ç–∫—Ä—ã–ª–æ—Å—å

    # 7Ô∏è‚É£ –ñ–¥–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª–æ–º" –∏ –Ω–∞–∂–∏–º–∞–µ–º
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª–æ–º'...")
    upload_file_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//div[contains(text(), '–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª–æ–º')]")))

    print("‚úÖ –ö–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞! –ù–∞–∂–∏–º–∞–µ–º...")
    upload_file_button.click()

    # 8Ô∏è‚É£ –ñ–¥–µ–º input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    file_input = wait.until(EC.presence_of_element_located((By.XPATH, "//input[@type='file']")))

    # 9Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ
    print(f"üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ: {video_path}")
    file_input.send_keys(os.path.abspath(video_path))
    time.sleep(10)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É

    # üîü –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"
    print("‚åõ –û–∂–∏–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'...")
    publish_button = wait.until(EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å')]")))

    print("‚úÖ –ù–∞–∂–∏–º–∞–µ–º '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'...")
    publish_button.click()

    print("‚úÖ –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ Boosty!")

finally:
    time.sleep(5)
    driver.quit()
